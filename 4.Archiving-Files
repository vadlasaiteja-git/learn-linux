LAB 

Creating a Sample Directory Structure
cd ~/project
mkdir -p test_dir/{subdir1,subdir2}
echo "This is file 1" > test_dir/file1.txt
echo "This is file 2" > test_dir/file2.txt
echo "This is in subdir1" > test_dir/subdir1/subfile1.txt
echo "This is in subdir2" > test_dir/subdir2/subfile2.txt

Now, let's verify the structure we've created:
tree test_dir

Packaging Files with tar
Now that we have our sample directory structure, let's learn about packaging files using the tar command. tar stands for "tape archive" and was originally used to create archives on tape drives. Today, it's commonly used to bundle multiple files and directories into a single file.

Let's package our test_dir:
cd ~/project
tar -cvf test_archive.tar test_dir

Let's break down this command:

tar: The command we're using to create the archive.
-c: This option tells tar to create a new archive.
-v: This stands for "verbose". It makes tar print out the names of the files it's adding to the archive. This is optional but helpful to see what's happening.
-f: This option is followed by the name of the archive file we want to create.
test_archive.tar: This is the name we're giving to our new archive file. The .tar extension is conventional for tar archives.
test_dir: This is the directory we're packaging into the archive.

To view the contents of the archive without extracting it, you can use:

tar -tvf test_archive.tar
This command lists (-t) the contents of the archive, verbosely (-v), from the file (-f) named test_archive.tar.

Extracting Files from a tar Archive

mkdir extracted_tar
tar -xvf test_archive.tar -C extracted_tar

Let's break down this command:

mkdir extracted_tar: This creates a new directory called extracted_tar where we'll put the contents of our archive.
tar: The command we're using to extract the archive.
-x: This option tells tar to extract files from an archive.
-v: This makes the operation verbose, showing us each file as it's extracted.
-f: This option specifies the name of the archive file to be operated on. When extracting files, it should be followed by the path or name of the tar file to extract.
-C extracted_tar: This option tells tar to change to the extracted_tar directory before extracting files.

To verify the extraction, you can use:

tree extracted_tar

Compressing Files with gzip
Now that we have created a tar archive, let's compress it using gzip:

gzip test_archive.tar

This command will compress test_archive.tar and rename it to test_archive.tar.gz. The original test_archive.tar file will be replaced by the compressed version.

To see the size of the compressed file, you can use the following command:

ls -lh test_archive.tar.gz

The -lh options will show the file size in a human-readable format (like KB, MB, etc.).

It's worth noting that while the .tar.gz extension is common, you might also see .tgz, which is equivalent.




