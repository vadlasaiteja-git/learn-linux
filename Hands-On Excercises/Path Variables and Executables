1. What is a Path Variable?
A path variable is an environment variable that stores directories where the system looks for executable files.
The most important path variable is $PATH.

Check your PATH variable:
echo $PATH

Each directory in $PATH is separated by a colon (:).

When you type a command (e.g., ls or python), the shell searches these directories in order and executes the first matching file.

2. Executables and How They Work
An executable is a file that can be run as a program. It can be:

A binary executable (compiled program, e.g., /bin/ls)
A script with execute permissions (e.g., myscript.sh)

Find an executableâ€™s location:
which ls
# Output: /bin/ls
whereis ls
# Output: ls: /bin/ls /usr/share/man/man1/ls.1.gz

Create a script myscript.sh

vim myscript.sh
echo "Listing Present Working Directory"
pwd
echo "Listing files in the directory"
ls

Now if we try to execute this script, we get an error stating -bash: ./myscript.sh: Permission denied
Because this file is not executable yet.
list permissions of file using ls -al
-rw-r--r--  1 saiteja saiteja    85 Mar  7 16:30 myscript.sh

To change the permissions, use command chmod
chmod +x myscript.sh

Now ls -al gives -rwxr-xr-x  1 saiteja saiteja    86 Mar  7 16:31 myscript.sh

Try to execute the file now,
 ~$./myscript.sh
Listing Present Working Directory
/home/saiteja
Listing files in the directory
dir3  etc  learn-shell  myscript.sh  nested  opt  project

Hands-on Exercise: Path Variables and Executables
Goal:
Create a custom script
Make it executable
Add it to $PATH
Run it like a normal command

Step 1: Create a Custom Directory for Scripts
mkdir -p ~/my_scripts
This creates a directory called my_scripts inside your home folder.

Step 2: Create a Simple Script

nano ~/my_scripts/hello.sh
Paste this content:
#!/bin/bash
echo "Hello, $USER! This is your custom command."
Save and exit (CTRL + X, then Y, then Enter).

Step 3: Make the Script Executable

chmod +x ~/my_scripts/hello.sh

Now, you can run it like this:

./my_scripts/hello.sh

Step 4: Add the Directory to Your $PATH

export PATH=$PATH:$HOME/my_scripts

Now, you can just type:

hello.sh

And it should run from anywhere!

Step 5: Make It Permanent
To make sure this works after restarting your terminal, add the export command to ~/.bashrc:

echo 'export PATH=$PATH:$HOME/my_scripts' >> ~/.bashrc
source ~/.bashrc

Step 6: Verify and Test

echo $PATH
which hello.sh
hello.sh

Expected Output:
Hello, your_username! This is your custom command.
